{"version":3,"sources":["recoil/atoms.js","assets/diceRoll2.mp3","components/dice.js","config/constants.js","assets/coinPalegreen.svg","assets/coinYellow.svg","assets/coinTomato.svg","assets/coinRoyalblue.svg","assets/coinMove.mp3","components/coin.js","components/homeCenter.js","assets/starOutline3.png","components/stepsBox.js","components/stepsGrid.js","components/homeBox.js","components/gameSetup.js","App.js","reportWebVitals.js","index.js"],"names":["currentPlayersListState","atom","key","default","currentPlayerState","currentDiceState","num","isLocked","lastRolledBy","allCoinState","palegreen","p0","position","isTurnAvailable","p1","p2","p3","yellow","y0","y1","y2","y3","royalblue","r0","r1","r2","r3","tomato","t0","t1","t2","t3","allBlockState","Dice","useState","isAnimating","setIsAnimating","useRecoilState","diceState","setDiceState","currentPlayer","useRecoilValue","className","onClick","Audio","diceRollSound","play","setTimeout","Math","ceil","random","style","gridTemplateColumns","Array","fill","map","_","i","backgroundColor","colorMap","p","y","r","t","playerOrder","markColorIndexes","leftOrTop","openIndex","markIndex","rightOrBottom","markStarIndexes","starIndexes","startMoves","moves","images","coinPalegreen","coinYellow","coinTomato","coinRoyalblue","Coin","parent","index","setCurrentPlayer","coinState","setCoinState","blockState","setBlockState","playersList","currentPosition","isPositionNotHomeOrWon","every","x","includes","parentMoves","nextMove","indexOf","length","moveableClass","useEffect","currentPlayerCoins","updatedState","cloneDeep","moveAvailCount","Object","keys","forEach","console","log","changePlayer","currentPlayerIndex","nextPlayer","coinMoveSound","updatedCoinState","updatedBlockState","splice","Set","parentKey","updatedFullCoinState","updatedFullBlockState","cb","coinsToBeReset","isStateUpdated","currentState","elem","item","startsWith","push","updateCoinBlockStates","isKilledSomeone","src","HomeCenterCoins","HomeCenter","transform","StepsBox","adjacentDirection","backgroundImage","StarBg","StepsGrid","j","HomeBox","border","PlayerButton","count","setTransClass","states","setCurrentPlayersList","resetBlockState","useResetRecoilState","resetCoinState","resetDiceState","randomNum","floor","slice","GameSetup","transClass","color","fontSize","App","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c609e3fc.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const currentPlayersListState = atom({\n  key: \"currentPlayersListState\",\n  default: [],\n});\n\nexport const currentPlayerState = atom({\n  key: \"currentPlayerState\",\n  default: \"\",\n});\n\nexport const currentDiceState = atom({\n  key: \"currentDiceState\",\n  default: { num: 0, isLocked: false, lastRolledBy: null },\n});\n\n/**\n * Posible values:\n * \"home\" - initial state\n * \"won\" - coin entered won state\n */\nexport const allCoinState = atom({\n  key: \"allCoinState\",\n  default: {\n    palegreen: {\n      p0: { position: \"home\", isTurnAvailable: true },\n      p1: { position: \"home\", isTurnAvailable: true },\n      p2: { position: \"home\", isTurnAvailable: true },\n      p3: { position: \"home\", isTurnAvailable: true },\n    },\n    yellow: {\n      y0: { position: \"home\", isTurnAvailable: true },\n      y1: { position: \"home\", isTurnAvailable: true },\n      y2: { position: \"home\", isTurnAvailable: true },\n      y3: { position: \"home\", isTurnAvailable: true },\n    },\n    royalblue: {\n      r0: { position: \"home\", isTurnAvailable: true },\n      r1: { position: \"home\", isTurnAvailable: true },\n      r2: { position: \"home\", isTurnAvailable: true },\n      r3: { position: \"home\", isTurnAvailable: true },\n    },\n    tomato: {\n      t0: { position: \"home\", isTurnAvailable: true },\n      t1: { position: \"home\", isTurnAvailable: true },\n      t2: { position: \"home\", isTurnAvailable: true },\n      t3: { position: \"home\", isTurnAvailable: true },\n    },\n  },\n});\n\nexport const allBlockState = atom({\n  key: \"allBlockState\",\n  default: {\n    // t30: [\"t0\", \"p1\"],\n    // \"r-won\": [\"r0\", \"r1\"],\n    // r51: [\"r2\"],\n  },\n});\n","export default __webpack_public_path__ + \"static/media/diceRoll2.55ad9bac.mp3\";","import { useState, useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { currentDiceState, currentPlayerState } from \"../recoil/atoms\";\nimport diceRollSound from \"../assets/diceRoll2.mp3\";\n\n/**\n * Component for DICE.\n * @returns JSX\n */\nfunction Dice() {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [diceState, setDiceState] = useRecoilState(currentDiceState);\n  const currentPlayer = useRecoilValue(currentPlayerState);\n\n  // Generates random dice value between 1 and 6\n  const rotateDice = () =>\n    setDiceState({\n      // num: 6,\n      num: Math.ceil(Math.random() * 6),\n      isLocked: true,\n      lastRolledBy: currentPlayer,\n    });\n\n  // Event handler for dice onClick\n  const onClick = () => {\n    if (!isAnimating && !diceState.isLocked) {\n      setDiceState({ num: 0, isLocked: false, lastRolledBy: currentPlayer });\n      setIsAnimating(true);\n\n      new Audio(diceRollSound).play();\n\n      setTimeout(() => {\n        rotateDice();\n        setIsAnimating(false);\n      }, 1000);\n    }\n  };\n\n  return (\n    <div\n      className={\"dice\" + (isAnimating ? \" dice-animation\" : \"\")}\n      onClick={onClick}\n      style={{\n        gridTemplateColumns: diceState.num > 1 ? \"repeat(2, 1fr)\" : \"1fr\",\n      }}\n    >\n      {Array(diceState.num)\n        .fill()\n        .map((_, i) => (\n          <div key={i}>\n            <div style={{ backgroundColor: currentPlayer }}></div>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default Dice;\n","export const colorMap = {\n  p: \"palegreen\",\n  y: \"yellow\",\n  r: \"royalblue\",\n  t: \"tomato\",\n};\n\nexport const playerOrder = [\"palegreen\", \"yellow\", \"royalblue\", \"tomato\"];\n\nexport const markColorIndexes = {\n  leftOrTop: {\n    openIndex: \"12\",\n    markIndex: [\"11\", \"12\", \"21\", \"31\", \"41\", \"51\"],\n  },\n  rightOrBottom: {\n    openIndex: \"40\",\n    markIndex: [\"01\", \"11\", \"21\", \"31\", \"40\", \"41\"],\n  },\n};\n\nexport const markStarIndexes = {\n  leftOrTop: { markIndex: [\"12\", \"20\"] },\n  rightOrBottom: { markIndex: [\"32\", \"40\"] },\n};\n\nexport const starIndexes = [\n  \"p32\",\n  \"p40\",\n  \"y20\",\n  \"y12\",\n  \"r20\",\n  \"r12\",\n  \"t32\",\n  \"t40\",\n];\n\nexport const startMoves = {\n  tomato: \"t40\",\n  palegreen: \"p40\",\n  yellow: \"y12\",\n  royalblue: \"r12\",\n};\n\nexport const specialMoves = {\n  r51: [\"r41\", \"r31\", \"r21\", \"r11\", \"r01\"],\n  p51: [\"p41\", \"p31\", \"p21\", \"p11\", \"p01\"],\n  y01: [\"y11\", \"y21\", \"y31\", \"y41\", \"y51\"],\n  r01: [\"r11\", \"r21\", \"r31\", \"r41\", \"r51\"],\n};\n\nexport const moves = {\n  palegreen: [\n    \"p40\",\n    \"p30\",\n    \"p20\",\n    \"p10\",\n    \"p00\",\n    \"y50\",\n    \"y40\",\n    \"y30\",\n    \"y20\",\n    \"y10\",\n    \"y00\",\n    \"y01\",\n    \"y02\",\n    \"y12\",\n    \"y22\",\n    \"y32\",\n    \"y42\",\n    \"y52\",\n    \"r50\",\n    \"r40\",\n    \"r30\",\n    \"r20\",\n    \"r10\",\n    \"r00\",\n    \"r01\",\n    \"r02\",\n    \"r12\",\n    \"r22\",\n    \"r32\",\n    \"r42\",\n    \"r52\",\n    \"t02\",\n    \"t12\",\n    \"t22\",\n    \"t32\",\n    \"t42\",\n    \"t52\",\n    \"t51\",\n    \"t50\",\n    \"t40\",\n    \"t30\",\n    \"t20\",\n    \"t10\",\n    \"t00\",\n    \"p02\",\n    \"p12\",\n    \"p22\",\n    \"p32\",\n    \"p42\",\n    \"p52\",\n    \"p51\",\n    \"p41\",\n    \"p31\",\n    \"p21\",\n    \"p11\",\n    \"p01\",\n    \"p-won\",\n  ],\n  yellow: [\n    \"y12\",\n    \"y22\",\n    \"y32\",\n    \"y42\",\n    \"y52\",\n    \"r50\",\n    \"r40\",\n    \"r30\",\n    \"r20\",\n    \"r10\",\n    \"r00\",\n    \"r01\",\n    \"r02\",\n    \"r12\",\n    \"r22\",\n    \"r32\",\n    \"r42\",\n    \"r52\",\n    \"t02\",\n    \"t12\",\n    \"t22\",\n    \"t32\",\n    \"t42\",\n    \"t52\",\n    \"t51\",\n    \"t50\",\n    \"t40\",\n    \"t30\",\n    \"t20\",\n    \"t10\",\n    \"t00\",\n    \"p02\",\n    \"p12\",\n    \"p22\",\n    \"p32\",\n    \"p42\",\n    \"p52\",\n    \"p51\",\n    \"p50\",\n    \"p40\",\n    \"p30\",\n    \"p20\",\n    \"p10\",\n    \"p00\",\n    \"y50\",\n    \"y40\",\n    \"y30\",\n    \"y20\",\n    \"y10\",\n    \"y00\",\n    \"y01\",\n    \"y11\",\n    \"y21\",\n    \"y31\",\n    \"y41\",\n    \"y51\",\n    \"y-won\",\n  ],\n  royalblue: [\n    \"r12\",\n    \"r22\",\n    \"r32\",\n    \"r42\",\n    \"r52\",\n    \"t02\",\n    \"t12\",\n    \"t22\",\n    \"t32\",\n    \"t42\",\n    \"t52\",\n    \"t51\",\n    \"t50\",\n    \"t40\",\n    \"t30\",\n    \"t20\",\n    \"t10\",\n    \"t00\",\n    \"p02\",\n    \"p12\",\n    \"p22\",\n    \"p32\",\n    \"p42\",\n    \"p52\",\n    \"p51\",\n    \"p50\",\n    \"p40\",\n    \"p30\",\n    \"p20\",\n    \"p10\",\n    \"p00\",\n    \"y50\",\n    \"y40\",\n    \"y30\",\n    \"y20\",\n    \"y10\",\n    \"y00\",\n    \"y01\",\n    \"y02\",\n    \"y12\",\n    \"y22\",\n    \"y32\",\n    \"y42\",\n    \"y52\",\n    \"r50\",\n    \"r40\",\n    \"r30\",\n    \"r20\",\n    \"r10\",\n    \"r00\",\n    \"r01\",\n    \"r11\",\n    \"r21\",\n    \"r31\",\n    \"r41\",\n    \"r51\",\n    \"r-won\",\n  ],\n  tomato: [\n    \"t40\",\n    \"t30\",\n    \"t20\",\n    \"t10\",\n    \"t00\",\n    \"p02\",\n    \"p12\",\n    \"p22\",\n    \"p32\",\n    \"p42\",\n    \"p52\",\n    \"p51\",\n    \"p50\",\n    \"p40\",\n    \"p30\",\n    \"p20\",\n    \"p10\",\n    \"p00\",\n    \"y50\",\n    \"y40\",\n    \"y30\",\n    \"y20\",\n    \"y10\",\n    \"y00\",\n    \"y01\",\n    \"y02\",\n    \"y12\",\n    \"y22\",\n    \"y32\",\n    \"y42\",\n    \"y52\",\n    \"r50\",\n    \"r40\",\n    \"r30\",\n    \"r20\",\n    \"r10\",\n    \"r00\",\n    \"r01\",\n    \"r02\",\n    \"r12\",\n    \"r22\",\n    \"r32\",\n    \"r42\",\n    \"r52\",\n    \"t02\",\n    \"t12\",\n    \"t22\",\n    \"t32\",\n    \"t42\",\n    \"t52\",\n    \"t51\",\n    \"t41\",\n    \"t31\",\n    \"t21\",\n    \"t11\",\n    \"t01\",\n    \"t-won\",\n  ],\n};\n","export default __webpack_public_path__ + \"static/media/coinPalegreen.5eb344c3.svg\";","export default __webpack_public_path__ + \"static/media/coinYellow.8f66742b.svg\";","export default __webpack_public_path__ + \"static/media/coinTomato.198e3c8a.svg\";","export default __webpack_public_path__ + \"static/media/coinRoyalblue.c04c7385.svg\";","export default __webpack_public_path__ + \"static/media/coinMove.c8776b00.mp3\";","import { useState, useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport _ from \"lodash\";\n\nimport {\n  currentPlayerState,\n  allCoinState,\n  allBlockState,\n  currentDiceState,\n  currentPlayersListState,\n} from \"../recoil/atoms\";\nimport { startMoves, moves, starIndexes, colorMap } from \"../config/constants\";\nimport coinPalegreen from \"../assets/coinPalegreen.svg\";\nimport coinYellow from \"../assets/coinYellow.svg\";\nimport coinTomato from \"../assets/coinTomato.svg\";\nimport coinRoyalblue from \"../assets/coinRoyalblue.svg\";\nimport coinMoveSound from \"../assets/coinMove.mp3\";\n\nconst images = {\n  palegreen: coinPalegreen,\n  yellow: coinYellow,\n  tomato: coinTomato,\n  royalblue: coinRoyalblue,\n};\n\n/**\n * Component for COIN that moves over entire board.\n * @param {Object} props\n * @returns JSX\n */\nfunction Coin({ parent, index, className }) {\n  const [currentPlayer, setCurrentPlayer] = useRecoilState(currentPlayerState);\n  const [coinState, setCoinState] = useRecoilState(allCoinState);\n  const [blockState, setBlockState] = useRecoilState(allBlockState);\n  const [diceState, setDiceState] = useRecoilState(currentDiceState);\n  const playersList = useRecoilValue(currentPlayersListState);\n\n  const { position: currentPosition, isTurnAvailable } =\n    coinState[parent][index];\n\n  // checks if the current position of coin is not home or won\n  const isPositionNotHomeOrWon = [\"home\", \"won\"].every(\n    (x) => !currentPosition.includes(x)\n  );\n\n  const parentMoves = moves[parent];\n  // Calculate next possible move for current coin\n  const nextMove = isPositionNotHomeOrWon\n    ? diceState.num &&\n      parentMoves.indexOf(currentPosition) + diceState.num < parentMoves.length\n      ? parentMoves[parentMoves.indexOf(currentPosition) + diceState.num]\n      : null\n    : currentPosition === \"home\"\n    ? startMoves[parent]\n    : \"\";\n\n  // Check with nextMove & diceNum; if the coin can move or not\n  const moveableClass =\n    currentPlayer === parent && nextMove\n      ? // (!currentPosition && nextMove) ||\n        // currentPosition === nextMove\n        // ? \"\"\n        // :\n        isTurnAvailable\n        ? isPositionNotHomeOrWon || diceState.num === 6\n          ? \" current-player-animation\"\n          : \"\"\n        : isPositionNotHomeOrWon && diceState.num\n        ? \" current-player-animation\"\n        : \"\"\n      : \"\";\n\n  /**\n   * This useEffect tracks the dice change and accordingly sets `isTurnAvailable`\n   * and also changes the player if next moe is not possible\n   */\n  useEffect(() => {\n    const currentPlayerCoins = coinState[parent];\n\n    if (diceState.num && currentPlayer === parent) {\n      const updatedState = _.cloneDeep(currentPlayerCoins);\n      let moveAvailCount = 0;\n\n      Object.keys(updatedState).forEach((key) => {\n        const position = updatedState[key].position;\n        if (\n          (position === \"home\" && diceState.num === 6) ||\n          ([\"home\", \"won\"].every((x) => !position.includes(x)) &&\n            parentMoves.indexOf(position) + diceState.num < parentMoves.length)\n        ) {\n          console.log({ position });\n          updatedState[key].isTurnAvailable = true;\n          moveAvailCount++;\n        } else {\n          updatedState[key].isTurnAvailable = false;\n        }\n      });\n\n      console.log({ moveAvailCount });\n\n      setCoinState({ ...coinState, [parent]: updatedState });\n      !moveAvailCount && changePlayer();\n    }\n  }, [diceState.num]);\n\n  /**\n   * This function updates the coin and block states accordingly, also checks if either of the coin is being killed by other.\n   * @param {String} parentKey              The nextMove the current coin should move to.\n   * @param {Object} updatedFullCoinState   Updated entire coin state object.\n   * @param {Object} updatedFullBlockState  Updated entire block state object.\n   * @param {Function} cb                   Should be called with a parameter i.e; number coins that have killed by some other coin.\n   * @returns void\n   */\n  const updateCoinBlockStates = (\n    parentKey,\n    updatedFullCoinState,\n    updatedFullBlockState,\n    cb\n  ) => {\n    setCoinState(updatedFullCoinState);\n    setBlockState(updatedFullBlockState);\n    updatedFullCoinState = _.cloneDeep(updatedFullCoinState);\n    let updatedBlockState = [];\n    let coinsToBeReset = [];\n    let isStateUpdated = false;\n\n    const currentState = updatedFullBlockState[parentKey];\n    if (!starIndexes.includes(parentKey) && currentState.length > 1) {\n      currentState.forEach((elem) => {\n        const allMatched = updatedBlockState.every((item) =>\n          item.startsWith(elem[0])\n        );\n        if (allMatched) updatedBlockState.push(elem);\n        else {\n          coinsToBeReset.push(...updatedBlockState);\n          updatedBlockState = [elem];\n        }\n      });\n\n      if (coinsToBeReset.length)\n        coinsToBeReset.forEach((key) => {\n          updatedFullCoinState[colorMap[key[0]]][key].position = \"home\";\n        });\n\n      isStateUpdated = true;\n    }\n\n    if (isStateUpdated) {\n      setCoinState(updatedFullCoinState);\n      setBlockState({\n        ...updatedFullBlockState,\n        [parentKey]: [...new Set(updatedBlockState)],\n      });\n    }\n    return cb(!!coinsToBeReset.length);\n  };\n\n  // Changes the player to next possible\n  const changePlayer = () => {\n    const currentPlayerIndex = playersList.indexOf(currentPlayer);\n    const nextPlayer =\n      currentPlayerIndex === -1 || !playersList[currentPlayerIndex + 1]\n        ? playersList[0]\n        : playersList[currentPlayerIndex + 1];\n\n    setTimeout(() => {\n      setDiceState({ num: 0, isLocked: false, lastRolledBy: currentPlayer });\n      setCurrentPlayer(nextPlayer);\n    }, 500);\n  };\n\n  /**\n   * This function is called as a event handler onClick on coin.\n   * Updates the coin positions and changes the player if required.\n   * @returns void\n   */\n  const playTurn = () => {\n    // prevent other player's coin moving on click when turn in of other\n    if (parent !== currentPlayer || !diceState.num || !moveableClass) return;\n\n    // const { position: currentPosition } = coinState[parent][index];\n\n    // if (!nextMove) return changePlayer();\n\n    new Audio(coinMoveSound).play();\n\n    const updatedCoinState = _.cloneDeep({\n      ...coinState[parent],\n      [index]: { position: nextMove, isTurnAvailable: false },\n    });\n\n    const updatedBlockState = _.cloneDeep(blockState);\n\n    isPositionNotHomeOrWon &&\n      updatedBlockState[currentPosition].splice(\n        updatedBlockState[currentPosition].indexOf(index),\n        1\n      );\n    updatedBlockState[nextMove] = [\n      ...new Set([...(blockState[nextMove] || []), index]),\n    ];\n\n    updateCoinBlockStates(\n      nextMove,\n      { ...coinState, [parent]: updatedCoinState },\n      updatedBlockState,\n      (isKilledSomeone) => {\n        !isKilledSomeone &&\n          !nextMove.includes(\"won\") &&\n          diceState.num !== 6 &&\n          changePlayer();\n        setDiceState({ num: 0, isLocked: false, lastRolledBy: currentPlayer });\n      }\n    );\n  };\n\n  return (\n    <div\n      className={\"coin\" + moveableClass}\n      onClick={playTurn}\n      // parent={parent}\n      // index={index}\n      // isMoveable={moveableClass}\n    >\n      <img src={images[parent]} className={className} />\n    </div>\n  );\n}\n\nexport default Coin;\n","import Dice from \"../components/dice\";\nimport Coin from \"../components/coin\";\nimport { useRecoilValue } from \"recoil\";\nimport { allBlockState } from \"../recoil/atoms\";\n\n/**\n * Component for showing the coins in winning state in HomeCenter.\n * @param {Object} props\n * @returns JSX\n */\nfunction HomeCenterCoins({ parent, style }) {\n  const blockState = useRecoilValue(allBlockState);\n  const key = `${parent[0]}-won`;\n\n  return (\n    <div className=\"homeCenterCoin\" style={style}>\n      {blockState &&\n        blockState[key] &&\n        blockState[key].map((item, i) => (\n          <Coin key={i} parent={parent} index={item} className=\"haveWon\" />\n        ))}\n    </div>\n  );\n}\n\n/**\n * Component for the center of the board that stores COIN in winning state.\n * @returns JSX\n */\nfunction HomeCenter() {\n  return (\n    <div className=\"homeCenter\">\n      <div>\n        <HomeCenterCoins parent=\"yellow\" />\n      </div>\n      <div>\n        <HomeCenterCoins\n          parent=\"palegreen\"\n          style={{ transform: \"rotate(90deg)\" }}\n        />\n        <Dice />\n        <HomeCenterCoins\n          parent=\"royalblue\"\n          style={{ transform: \"rotate(90deg)\" }}\n        />\n      </div>\n      <div>\n        <HomeCenterCoins parent=\"tomato\" />\n      </div>\n    </div>\n  );\n}\n\nexport default HomeCenter;\n","export default __webpack_public_path__ + \"static/media/starOutline3.638b0c2b.png\";","import { useRecoilValue } from \"recoil\";\nimport _ from \"lodash\";\n\nimport {\n  markColorIndexes,\n  markStarIndexes,\n  colorMap,\n} from \"../config/constants\";\nimport { allBlockState } from \"../recoil/atoms\";\nimport Coin from \"./coin\";\nimport StarBg from \"../assets/starOutline3.png\";\n\n/**\n * Component that holds the single step of the entire border steps grid.\n * @param {Object} props\n * @returns JSX\n */\nfunction StepsBox({ parent, adjacentDirection, index }) {\n  const blockState = useRecoilValue(allBlockState);\n  const parentKey = parent[0] + index;\n\n  const style = {\n    backgroundImage: markStarIndexes[adjacentDirection].markIndex.includes(\n      index\n    )\n      ? `url(${StarBg})`\n      : \"\",\n    backgroundColor: markColorIndexes[adjacentDirection].markIndex.includes(\n      index\n    )\n      ? parent\n      : \"transparent\",\n  };\n\n  return (\n    <div className=\"stepBox\" style={style}>\n      <div style={{ position: \"absolute\" }}>{parent[0] + index}</div>\n      {blockState[parentKey] &&\n        blockState[parentKey].map((elem, i) => {\n          return <Coin key={i} parent={colorMap[elem[0]]} index={elem} />;\n        })}\n    </div>\n  );\n}\n\nexport default StepsBox;\n","import StepsBox from \"./stepsBox\";\n\n/**\n * Component for one of the 4 steps grid.\n * @param {Object} props\n * @returns JSX\n */\nfunction StepsGrid({ style, parent, adjacentDirection }) {\n  return (\n    <div style={style}>\n      {Array(6)\n        .fill()\n        .map((_, i) => (\n          <div key={i} className={\"stepRow\"}>\n            {Array(3)\n              .fill()\n              .map((_, j) => (\n                <StepsBox\n                  key={i + \"\" + j}\n                  index={i + \"\" + j}\n                  parent={parent}\n                  adjacentDirection={adjacentDirection}\n                />\n              ))}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default StepsGrid;\n","import { useRecoilValue } from \"recoil\";\nimport {\n  allCoinState,\n  currentDiceState,\n  currentPlayerState,\n  currentPlayersListState,\n} from \"../recoil/atoms\";\nimport Coin from \"./coin\";\n\n// This component is for 4 blocks that stores COIN in initial state.\nfunction HomeBox({ parent }) {\n  const coinState = useRecoilValue(allCoinState);\n  const currentPlayer = useRecoilValue(currentPlayerState);\n  const playersList = useRecoilValue(currentPlayersListState);\n\n  // const currentDiceNum = useRecoilValue(currentDiceState);\n\n  return (\n    <div className={\"homeBox\"}>\n      {currentPlayer === parent && <div className={\"homeBoxOverlay\"}></div>}\n      {Array(4)\n        .fill()\n        .map((_, i) => (\n          <div\n            key={i}\n            className={\"homeBoxInner\"}\n            style={{ border: `20px solid ${parent}` }}\n          >\n            {playersList.includes(parent) &&\n              coinState[parent][parent[0] + i].position === \"home\" && (\n                <Coin parent={parent} index={parent[0] + i} />\n              )}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default HomeBox;\n","import { useState } from \"react\";\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\nimport { playerOrder } from \"../config/constants\";\nimport * as states from \"../recoil/atoms\";\n\n/**\n * This component is being called from GameSetup, and handles the player count buttons.\n * @param {Object} props\n * @returns JSX\n */\nfunction PlayerButton({ count, setTransClass }) {\n  const setCurrentPlayer = useRecoilState(states.currentPlayerState)[1];\n  const setCurrentPlayersList = useRecoilState(\n    states.currentPlayersListState\n  )[1];\n\n  const resetBlockState = useResetRecoilState(states.allBlockState);\n  const resetCoinState = useResetRecoilState(states.allCoinState);\n  const resetDiceState = useResetRecoilState(states.currentDiceState);\n\n  // Event handler for button onClick.\n  const handleClick = () => {\n    const randomNum = Math.floor(Math.random() * 2);\n    const playersList =\n      count === 2\n        ? [playerOrder[randomNum], playerOrder[randomNum + 2]]\n        : count === 3\n        ? playerOrder.slice(randomNum, randomNum + 3)\n        : [...playerOrder];\n\n    // reset previous states\n    resetBlockState();\n    resetCoinState();\n    resetDiceState();\n\n    setCurrentPlayersList([...playersList]);\n    setCurrentPlayer(playersList[0]);\n    // console.log(currentPlayersList, playersList);\n    setTransClass(\" scaleDown\");\n  };\n\n  return (\n    <div className=\"gameSetupPlayerSelectBtn\" onClick={handleClick}>\n      {count}\n    </div>\n  );\n}\n\n/**\n * This component handles the screen where user can choose the players count.\n * @returns JSX\n */\nfunction GameSetup() {\n  const [transClass, setTransClass] = useState(\"\");\n\n  return (\n    <div className={\"gameSetup\" + transClass}>\n      <h1 style={{ color: \"white\", fontSize: 20 }}>Welcome to LUDO</h1>\n      <h1 style={{ color: \"white\", fontSize: 20 }}>Choose players</h1>\n      <div>\n        {[2, 3, 4].map((i) => (\n          <PlayerButton\n            key={i}\n            count={i}\n            setTransClass={(className) => setTransClass(className)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GameSetup;\n","import \"./styles/App.css\";\nimport { useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport _ from \"lodash\";\n\nimport * as states from \"./recoil/atoms\";\n\nimport HomeCenter from \"./components/homeCenter\";\nimport StepsGrid from \"./components/stepsGrid\";\nimport HomeBox from \"./components/homeBox\";\nimport GameSetup from \"./components/gameSetup\";\nimport { colorMap, moves, playerOrder } from \"./config/constants\";\n\nfunction Emulation() {\n  const [currentPlayer, setCurrentPlayer] = useRecoilState(\n    states.currentPlayerState\n  );\n  const [diceState, setDiceState] = useRecoilState(states.currentDiceState);\n  const [blockState, setBlockState] = useRecoilState(states.allBlockState);\n  const [coinState, setCoinState] = useRecoilState(states.allCoinState);\n  const playersList = useRecoilValue(states.currentPlayersListState);\n\n  // useEffect(() => {\n  //   console.log(JSON.stringify({ blockState, coinState }, 0, 2));\n  // }, [JSON.stringify(coinState), JSON.stringify(blockState)]);\n\n  return (\n    <div>\n      {[1, 2, 3, 4, 5, 6].map((i) => (\n        <button\n          key={i}\n          onClick={() => {\n            setDiceState({\n              num: i,\n              isLocked: false,\n              lastRolledBy: currentPlayer,\n            });\n          }}\n        >\n          {i}\n        </button>\n      ))}\n      <br />\n      {playersList.map((elem, i) => (\n        <button\n          key={i}\n          onClick={() => {\n            setCurrentPlayer(elem);\n          }}\n          style={{ backgroundColor: elem }}\n        >\n          {elem}\n        </button>\n      ))}\n      <div>\n        <span>Enter (eg; p1-t40): </span>\n        <input\n          type=\"text\"\n          onKeyUp={({ code, currentTarget: { value } }) => {\n            if (code === \"Enter\") {\n              if (value.match(/^[pyrt][0-3]-[pyrt]\\d{2}$/)) {\n                const [coinKey, boxKey] = value.split(\"-\");\n                const parent = colorMap[coinKey[0]];\n                if (!playersList.includes(parent)) return;\n                const oldPosition = coinState[parent][coinKey].position;\n\n                setCoinState({\n                  ...coinState,\n                  [parent]: {\n                    ...coinState[parent],\n                    [coinKey]: { position: boxKey, isTurnAvailable: false },\n                  },\n                });\n\n                const oldBlockState = _.cloneDeep(blockState);\n\n                oldPosition &&\n                  !oldPosition.includes(\"home\") &&\n                  oldBlockState[oldPosition].splice(\n                    oldBlockState[oldPosition].indexOf(coinKey),\n                    1\n                  );\n\n                setBlockState({\n                  ...oldBlockState,\n                  [boxKey]: [\n                    ...new Set([...(oldBlockState[boxKey] || []), coinKey]),\n                  ],\n                });\n              } else alert(\"Wrong input!\");\n            }\n          }}\n        ></input>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      <GameSetup />\n      <div className=\"App\">\n        <div className=\"boardWrapper\">\n          <div className=\"innerRow\">\n            <HomeBox parent=\"palegreen\" />\n            <StepsGrid parent=\"yellow\" adjacentDirection=\"leftOrTop\" />\n            <HomeBox parent=\"yellow\" />\n          </div>\n          <div className=\"innerRow\">\n            <StepsGrid\n              style={{ transform: \"rotate(90deg)\" }}\n              parent=\"palegreen\"\n              adjacentDirection=\"rightOrBottom\"\n            />\n            <HomeCenter />\n            <StepsGrid\n              style={{ transform: \"rotate(90deg)\" }}\n              parent=\"royalblue\"\n              adjacentDirection=\"leftOrTop\"\n            />\n          </div>\n          <div className=\"innerRow\">\n            <HomeBox parent=\"tomato\" />\n            <StepsGrid parent=\"tomato\" adjacentDirection=\"rightOrBottom\" />\n            <HomeBox parent=\"royalblue\" />\n          </div>\n        </div>\n        <br />\n        {process.env.NODE_ENV === \"development\" && <Emulation />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}